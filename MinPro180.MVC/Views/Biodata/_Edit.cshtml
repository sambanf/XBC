@model MinPro180.ViewModel.BiodataViewModel

@using (Html.BeginForm("Edit", "Biodata", FormMethod.Post, new { id = "edit-form", name = "edit-form" }))
{
	

	<div class="form-horizontal">

		@Html.ValidationSummary(true, "", new { @class = "text-danger" })
		@Html.HiddenFor(model => model.id)

		<div class="form-group">

			<div class="col-md-6">
				@Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control", @placeholder = "Name" } })
				@Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
			</div>

			@Html.LabelFor(model => model.gender, htmlAttributes: new { @class = "control-lebel col-md-2" })

			<div class="radio radio-inline">
				@Html.RadioButtonFor(model => model.gender, "Male")
				Male
			</div>
			<div class="radio radio-inline">
				@Html.RadioButtonFor(model => model.gender, "Female")
				Female
			</div>
			@Html.ValidationMessageFor(model => model.gender, "", new { @class = "text-danger" })
		</div>

		<div class="form-group">

			<div class="col-md-6">
				@Html.EditorFor(model => model.last_education, new { htmlAttributes = new { @class = "form-control", @placeholder = "Last Education" } })
				@Html.ValidationMessageFor(model => model.last_education, "", new { @class = "text-danger" })
			</div>

			@Html.EditorFor(model => model.bootcamp_test_type, new { htmlAttributes = new { @class = "form-control", @placeholder = "Bootcamp Test Type" } })
			@Html.ValidationMessageFor(model => model.bootcamp_test_type, "", new { @class = "text-danger" })

		</div>


		<div class="form-group">
			<div class="col-md-6">
				@Html.EditorFor(model => model.educational_level, new { htmlAttributes = new { @class = "form-control", @placeholder = "Educational Level" } })
				@Html.ValidationMessageFor(model => model.educational_level, "", new { @class = "text-danger" })
			</div>


			<div class="col-md-2">
				@Html.EditorFor(model => model.iq, new { htmlAttributes = new { @class = "form-control", @placeholder = "IQ" } })
				@Html.ValidationMessageFor(model => model.iq, "", new { @class = "text-danger" })
			</div>

			<div class="col-md-2">
				@Html.EditorFor(model => model.du, new { htmlAttributes = new { @class = "form-control", @placeholder = "DU" } })
				@Html.ValidationMessageFor(model => model.du, "", new { @class = "text-danger" })
			</div>
		</div>
		<div class="form-group">
			<div class="col-md-6">
			</div>
			<div class="col-md-2">
				@Html.EditorFor(model => model.nested_logic, new { htmlAttributes = new { @class = "form-control", @placeholder = "NL" } })
				@Html.ValidationMessageFor(model => model.nested_logic, "", new { @class = "text-danger" })
			</div>

			<div class=" col-md-2">
				@Html.EditorFor(model => model.join_table, new { htmlAttributes = new { @class = "form-control", @placeholder = "JT" } })
				@Html.ValidationMessageFor(model => model.join_table, "", new { @class = "text-danger" })
			</div>
		</div>


		<div class="form-group">

			<div class="col-md-6">
				@Html.EditorFor(model => model.graduation_year, new { htmlAttributes = new { @class = "form-control", @placeholder = "Graduation Year" } })
				@Html.ValidationMessageFor(model => model.graduation_year, "", new { @class = "text-danger" })
			</div>
			@Html.EditorFor(model => model.arithmetic, new { htmlAttributes = new { @class = "form-control", @placeholder = "Arithmetic" } })
			@Html.ValidationMessageFor(model => model.arithmetic, "", new { @class = "text-danger" })
		</div>


		<div class="form-group">

			<div class="col-md-6">
				@Html.EditorFor(model => model.majors, new { htmlAttributes = new { @class = "form-control", @placeholder = "Majors" } })
				@Html.ValidationMessageFor(model => model.majors, "", new { @class = "text-danger" })
			</div>

			@Html.EditorFor(model => model.tro, new { htmlAttributes = new { @class = "form-control", @placeholder = "TRO" } })
			@Html.ValidationMessageFor(model => model.tro, "", new { @class = "text-danger" })
		</div>

		<div class="form-group">

			<div class="col-md-6">
				@Html.EditorFor(model => model.gpa, new { htmlAttributes = new { @class = "form-control",@type="number", @placeholder = "GPA" } })
				@Html.ValidationMessageFor(model => model.gpa, "", new { @class = "text-danger" })
			</div>
			@Html.EditorFor(model => model.interviewer, new { htmlAttributes = new { @class = "form-control", @placeholder="Interviewer" } })
			@Html.ValidationMessageFor(model => model.interviewer, "", new { @class = "text-danger" })

		</div>
		<div class="form-group">

			<div class="col-md-6">
			</div>
			@Html.TextAreaFor(model => model.notes, 6, 40, new { @class = "form-control", @placeholder = "Notes" })
			@Html.ValidationMessageFor(model => model.notes, "", new { @class = "text-danger" })
		</div>



		<div class="form-group">
			<div class="col-md-offset-6 col-md-6">
				<input type="submit" value="Save" class="btn btn-success" />
				<input type="button" value="Cancel" class="btn btn-default" data-dismiss="modal" />
			</div>
		</div>
	</div>
}

@Scripts.Render("~/bundles/jqueryval")
<script type="text/javascript">
    $("#edit-form").submit(function () {
       //alert($(this).serialize());
        $.ajax({
			url: '@Url.Action("Edit","Biodata")',
			type: this.method,
            data: $(this).serialize(),
            success: function (result) {
                if (result.success) {
                    alert("Data Successfully Updated");
                    $(".modal").modal("hide");
                    GetList();
                } else {
					alert("Error!." + result.message);
                }
            }
        });
        return false;
	});
</script>
